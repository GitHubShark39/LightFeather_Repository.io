Git Adding an existing project to GitHub using the command line
Git Adding an existing project to GitHub.txt using the command line
Putting your existing work on GitHub can let you share and collaborate in lots of great ways.

Mac
Windows
Linux
All
If you are migrating your project from CodePlex, read the migration guide for more information.

Tip: If you're most comfortable with a point-and-click user interface, try adding your project with GitHub Desktop. For more information, see "Adding a repository from your local computer to GitHub Desktop" in the GitHub Desktop Help.

Warning: Never git add, commit, or push sensitive information to a remote repository. Sensitive information can include, but is not limited to:

Passwords
SSH keys
AWS access keys
API keys
Credit card numbers
PIN numbers
For more information, see "Removing sensitive data from a repository."

Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub.

Create New Repository drop-down
Open Git Bash.

Change the current working directory to your local project.

Initialize the local directory as a Git repository.

$ git init
Add the files in your new local repository. This stages them for the first commit.

$ git add .
# Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.
Commit the files that you've staged in your local repository.

$ git commit -m "First commit"
# Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.
At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.

Copy remote repository URL field
In the Command prompt, add the URL for the remote repository where your local repository will be pushed.

$ git remote add origin remote repository URL
# Sets the new remote
$ git remote -v
# Verifies the new remote URL
Push the changes in your local repository to GitHub.

$ git push origin master
# Pushes the changes in your local repository up to the remote repository you specified as the origin
Further reading
"Adding a file to a repository using the command line"


C:\0_0_DevOps_Configuration_Repository\0_TerraForm_Repository\terraform.redvulture.github.io>git push origin master
Username for 'https://github.com/GitHubShark39/terraform.redvulture.github.io.git': GitHubShark39
Password for 'https://GitHubShark39@github.com/GitHubShark39/terraform.redvulture.github.io.git':
Counting objects: 45, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (45/45), done.
Writing objects: 100% (45/45), 17.05 MiB | 160.00 KiB/s, done.
Total 45 (delta 3), reused 0 (delta 0)
remote: Resolving deltas: 100% (3/3), done.
To https://github.com/GitHubShark39/terraform.redvulture.github.io.git
   c4955fd..90999f9  master -> master

C:\0_0_DevOps_Configuration_Repository\0_TerraForm_Repository\terraform.redvulture.github.io>

